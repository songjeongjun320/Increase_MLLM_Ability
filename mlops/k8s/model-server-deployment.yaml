# Kubernetes Deployment for ToW Model Server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tow-model-server
  namespace: tow-production
  labels:
    app: tow-model-server
    version: v1.0.0
    component: inference
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: tow-model-server
  template:
    metadata:
      labels:
        app: tow-model-server
        version: v1.0.0
        component: inference
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: tow-model-server
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      
      containers:
      - name: tow-model-server
        image: tow-research/model-server:v1.0.0
        imagePullPolicy: Always
        
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        
        env:
        - name: MLOPS_ENV
          value: "production"
        - name: MODEL_SERVER_HOST
          value: "0.0.0.0"
        - name: MODEL_SERVER_PORT
          value: "8000"
        - name: MODEL_SERVER_WORKERS
          value: "4"
        
        # Database configuration
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: tow-database-secret
              key: connection-string
        
        # Redis configuration
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: tow-redis-secret
              key: connection-string
        
        # MLflow configuration
        - name: MLFLOW_TRACKING_URI
          valueFrom:
            configMapKeyRef:
              name: tow-config
              key: mlflow-tracking-uri
        
        # Authentication
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: tow-auth-secret
              key: jwt-secret
        
        # Monitoring
        - name: SLACK_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: tow-monitoring-secret
              key: slack-webhook
              optional: true
        
        resources:
          requests:
            memory: "8Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
          limits:
            memory: "16Gi"
            cpu: "4000m"
            nvidia.com/gpu: 1
        
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 30  # Allow 5 minutes for startup
        
        volumeMounts:
        - name: model-cache
          mountPath: /app/models
        - name: logs
          mountPath: /app/logs
        - name: config
          mountPath: /app/config
          readOnly: true
        
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: tow-model-cache-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: tow-logs-pvc
      - name: config
        configMap:
          name: tow-config
      
      nodeSelector:
        node-type: gpu
        gpu-memory: high
      
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - tow-model-server
              topologyKey: kubernetes.io/hostname

---
# Service for ToW Model Server
apiVersion: v1
kind: Service
metadata:
  name: tow-model-server
  namespace: tow-production
  labels:
    app: tow-model-server
    component: inference
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: tow-model-server

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: tow-model-server-hpa
  namespace: tow-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tow-model-server
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 2
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 600
      policies:
      - type: Pods
        value: 1
        periodSeconds: 60

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: tow-model-server-pdb
  namespace: tow-production
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: tow-model-server